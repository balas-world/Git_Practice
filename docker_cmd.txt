
docker pull ubuntu:latest
docker run -it ubuntu
to loginto docker 
docker login   /    docker login -u username (after that it will ask for password)
to push image to docker 
docker tag docker.io/babybala69/general:name
docker push path(babybala69/general..)
docker commit -m "name" old-img-id name (eg:bala:v1, acb.1.2.3, etc ....)
docker rmi (name of the ima:tag)


docker network ls
docker network inspect bridge
 
#to check the available img in local
docker image ls 

docker pull img-name
docker image ls
docker ps 
to remove the container 
docker rm -f `docker ps -qa`
to log into the container
docker exec -it (container id) /bin/bash
docker exec container-id cmd-need-to-exe

docker log id
to show only the container id
docker ps -aq
to delete all the ps 
docker rm -f 'docker ps -aq'
to cchek the free memory
free -m 
to take cmd access of the container
docker run -it container id
docker run -d -P (img-name)
to change the container name
docker run -d -P --name (name) (img-name)
to run a container id we run this cmd the container will be in exited state 
docker run -d name




automate dockerfile
###
FROM tomcate
RUN ls ; apt update
RUN pws
RUN echo "hello"
COPY (src file on vm) (dest on docker )
COPY path /opt/...
ENV JAVA_HOME=/opt/...
ENV JAVA_VERSION="1.00"
EXPOSE 8080
to run a service
CMD ["/opt/..."]
mandatoru cmd to run a service
CMD ["path ", "run"]


###
docker build --file (name of the file) --tag mytag (path or . for current folder)
docker image rm name:tag
to remove the stoped container
docker system prune -a


-----------
Volume
-----------
docker log con id
docker volume ls
docker volume create name
docker volume inspect name od container

to mount a volume to container
docker run -d -P --mount type=volume,src=(name od the volume),target=(path in side container)/opt/tocat/logs (image name)
or
docker run -d -P --volume (name od the volume):(path in side container)/opt/tocat/logs -v(name od the volume):(path in side container)/opt/tocat/logs (image name)
to save a user defined path
docker run -d -P --mount type=bind,src=(path ware we need to save the logs),target=(path in side container)/opt/tocat/logs (image name)
to save a log in different file
docker run -d -P --mount type=bind,src=(path ware we need to save the logs),target=(path in side container)/opt/tocat/logs --mount type=bind,src=(path ware we need to save the logs),target=(path in side container)/opt/tocat/logs--mount type=bind,src=(path ware we need to save the logs),target=(path in side container)/opt/tocat/logs (image name)

docker inspect container-id | grep volume



------------------
Network
------------------
docker nerwork ls
docker network inspect bridge
docker inspect (name of the container)
docker exec (name of the container) cmd (eg ping)
docker  network disconnect (name of the network) (name of the container)
docker run -d --network (name of the network) (name of the container or id )
-------------
Docker compose
-------------
script

###########
services:
	balaapp:
		image: (name of the img from docker)
		deploy:
			replices:3
		ports:
			- 80 #http
		volumes:
			- (from path):(to path)
			- (same format to attach number of volumes)
		networks:
			- bridge 

(to create a network )
networks:
	balasnetwork: 





to run a docker compose
docker compose --file (name of the file.yaml ) up -d
docker compose --file (name of the file.yaml ) up scale (name of the container)=(number of container i want) -d
docker compose --file (name of the file .yaml ) down
